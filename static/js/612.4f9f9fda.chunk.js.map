{"version":3,"file":"static/js/612.4f9f9fda.chunk.js","mappings":"yJACA,SAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,aAAe,8BAA8B,aAAe,8BAA8B,eAAiB,iC,uBCGtU,SAASA,EAAQC,GAC9B,OACAC,EAAAA,EAAAA,KAAA,OAAAC,UAGAD,EAAAA,EAAAA,KAACE,EAAAA,GAAO,CAACC,UAAWC,GAAUA,EAAQC,SAAWC,EAAMC,OAASD,EAAME,OAAQC,GAAI,YAAaV,EAAMW,GAAGT,SAAEF,EAAMY,QAGlH,CCTe,SAASC,EAASb,GAC7B,OAEEC,EAAAA,EAAAA,KAAA,OAAKG,UAAWG,EAAMO,QAAQZ,SAAEF,EAAMc,SAG5C,C,yCCsDA,MAAMC,GAAcC,EAAAA,EAAAA,IAAiB,IAiB/BC,GAAuBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAfLlB,IAEhBoB,EAAAA,EAAAA,MAAA,QAAMC,SAAUrB,EAAMsB,aAAapB,SAAA,EACnCD,EAAAA,EAAAA,KAAA,OAAKG,UAAWG,EAAMgB,eAAerB,UACjCD,EAAAA,EAAAA,KAACuB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,EAAUd,KAAK,iBAAkBe,YAAY,qBAC/DC,SAAU,CAACC,EAAAA,GAAed,QAG9Bd,EAAAA,EAAAA,KAAA,OAAKG,UAAWG,EAAMuB,aAAa5B,UAC/BD,EAAAA,EAAAA,KAAA,UAAQG,UAAWG,EAAMwB,aAAa7B,SAAE,gB,wBCjCnD,SAAe8B,E,QAAAA,KACZC,EAAAA,EAAAA,KAtBuBC,IACZ,CACHC,YAAaD,EAAME,YAAYD,YAC/BE,YAAaH,EAAME,YAAYC,YAC/BC,eAAgBJ,EAAME,YAAYE,mBAKhBC,IACf,CACHC,YAAcF,IACVC,GAASE,EAAAA,EAAAA,GAAmBH,GAAgB,MAWxDI,EAAAA,EAFH,EDvBc,SAAiB1C,GAGhC,IAAI2C,EAAkB3C,EAAMmC,YAAYS,KAAKC,IAEtC5C,EAAAA,EAAAA,KAACF,EAAM,CAAca,KAAMiC,EAAIjC,KAAMD,GAAIkC,EAAIlC,IAAhCkC,EAAIlC,MAKpBmC,EAAmB9C,EAAMqC,YAAYO,KAAKC,IAEvC5C,EAAAA,EAAAA,KAAA,OAAAC,UAAKD,EAAAA,EAAAA,KAACY,EAAO,CAAcC,QAAS+B,EAAI/B,QAASH,GAAIkC,EAAIlC,IAAtCkC,EAAIlC,QAgB5B,OACES,EAAAA,EAAAA,MAAA,OAAKhB,UAAWG,EAAMwC,QAAQ7C,SAAA,EAC1BkB,EAAAA,EAAAA,MAAA,OAAKhB,UAAWG,EAAMyC,aAAa9C,SAAA,EAC/BD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,YAEDyC,MAIPvB,EAAAA,EAAAA,MAAA,OAAKhB,UAAWG,EAAM0C,SAAS/C,SAAA,EAC3BD,EAAAA,EAAAA,KAAA,OAAAC,SAAM4C,KACP7C,EAAAA,EAAAA,KAACgB,EAAmB,CAACI,SAnBX6B,IAElBlD,EAAMwC,YAAYU,EAAOZ,eAAe,SAsB3C,G","sources":["webpack://kamasutra/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__Hfhik\",\"dialog_items\":\"Dialogs_dialog_items__cRBby\",\"dialog\":\"Dialogs_dialog__Q98LB\",\"active\":\"Dialogs_active__BGmeI\",\"messages\":\"Dialogs_messages__Hn39d\",\"message\":\"Dialogs_message__vb6mQ\",\"send_message\":\"Dialogs_send_message__YnmAQ\",\"button_block\":\"Dialogs_button_block__mJvxq\",\"block_textarea\":\"Dialogs_block_textarea__m+tII\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport style from './../Dialogs.module.css'\r\n\r\nexport default function Dialog (props) {\r\n  return (\r\n  <div >\r\n    \r\n\r\n  <NavLink className={navData=> navData.isActive ? style.active : style.dialog} to={\"/dialogs/\"+ props.id}>{props.name}</NavLink> \r\n  </div>\r\n  )\r\n}","import React from 'react'\r\nimport style from './../Dialogs.module.css'\r\n\r\nexport default function Message (props) {\r\n    return (\r\n       \r\n      <div className={style.message}>{props.message}</div>\r\n    )\r\n\r\n}","import React from 'react'\r\nimport style from \"./Dialogs.module.css\"\r\n\r\nimport Dialog from './Dialog/Dialog'\r\nimport Message from './Message/Message'\r\nimport { Navigate } from 'react-router-dom'\r\nimport {Field, reduxForm} from \"redux-form\"\r\nimport { Textarea } from '../FormControls/FormControls'\r\nimport { maxLengthCreator, requiredField } from '../../utils/validators/validator'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Dialogs(props) {\r\n\r\n\r\nlet dialogsElements = props.dialogsData.map((obj) => {\r\n    return(\r\n       <Dialog key={obj.id} name={obj.name} id={obj.id} /> \r\n    )\r\n    \r\n})\r\n\r\nlet messagesElemants = props.messageData.map((obj) => {\r\n    return (\r\n       <div><Message key={obj.id} message={obj.message} id={obj.id} /></div>  \r\n       \r\n    )\r\n})\r\n\r\n\r\n\r\n\r\nlet addNewMessege = (values) => {\r\n  //  alert(values.newMessageText) //указывается значение name из Field\r\n   props.sendMessage(values.newMessageText)\r\n}\r\n\r\n//alert (props.isAuth)\r\n//перенесено в AuthRedirectComponent в DialogsContainer\r\n//if (props.isAuth === false) return <Navigate to=\"/login\"></ >\r\n  return (\r\n    <div className={style.dialogs}> \r\n        <div className={style.dialog_items}>\r\n            <h2>Dialogs</h2>\r\n               \r\n              {dialogsElements}\r\n         \r\n\r\n        </div>\r\n        <div className={style.messages}> \r\n            <div>{messagesElemants}</div>\r\n           <AddMessageFormRedux onSubmit={addNewMessege} />\r\n        </div>\r\n        \r\n    </div>\r\n  )\r\n}\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div className={style.block_textarea}>\r\n            <Field component={Textarea} name=\"newMessageText\"  placeholder='Enter your message'\r\n            validate={[requiredField, maxLength50]}/>\r\n      \r\n        </div>\r\n        <div className={style.button_block}>\r\n            <button className={style.send_message} >Send</button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux =  reduxForm({form: 'dialogAddMessageForm' }) (AddMessageForm)\r\n\r\n","import React from 'react'\r\n\r\nimport { sendMessageCreator } from '../../redux/dialogsReducer'\r\nimport Dialogs from './Dialogs'\r\nimport { connect } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\n\r\n\r\n\r\n//hoc\r\n  //  let AuthRedirectComponent = withAuthRedirect(Dialogs) //передано в compose\r\n   /* аналогично let AuthRedirectComponent =\r\n    (props) => {\r\n        if (!props.isAuth) return <Navigate to=\"/login\"></Navigate>\r\n        return <Dialogs {...props}/>\r\n    }*/\r\n\r\n    let mapStateToProps = (state) => {\r\n        return {\r\n            dialogsData: state.dialogsPage.dialogsData,\r\n            messageData: state.dialogsPage.messageData,\r\n            newMessageText: state.dialogsPage.newMessageText,\r\n           // isAuth: state.auth.isAuth\r\n\r\n        }\r\n    }\r\n    let mapDispatchToProps = (dispatch) => {\r\n        return {\r\n            sendMessage: (newMessageText) => { //newMessageTaet это название name из Fielg в Dialogs\r\n                dispatch(sendMessageCreator(newMessageText))\r\n            },\r\n           \r\n\r\n        }\r\n    }\r\n //const DialogsContainer = connect (mapStateToProps, mapDispatchToProps ) (AuthRedirectComponent) \r\n //передано в compose\r\n\r\n export default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Dialogs)"],"names":["Dialog","props","_jsx","children","NavLink","className","navData","isActive","style","active","dialog","to","id","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","_jsxs","onSubmit","handleSubmit","block_textarea","Field","component","Textarea","placeholder","validate","requiredField","button_block","send_message","compose","connect","state","dialogsData","dialogsPage","messageData","newMessageText","dispatch","sendMessage","sendMessageCreator","withAuthRedirect","dialogsElements","map","obj","messagesElemants","dialogs","dialog_items","messages","values"],"sourceRoot":""}