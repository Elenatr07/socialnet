{"version":3,"file":"static/js/346.34ca2d7e.chunk.js","mappings":"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","sources":["webpack://kamasutra/./src/components/Profile/MyPosts/ProfileInfo.module.css?3a51","components/Profile/MyPosts/ProfileStatusFunc.jsx","components/Profile/MyPosts/ProfileInfo.jsx","webpack://kamasutra/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","webpack://kamasutra/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/Post/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ava\":\"ProfileInfo_ava__6QMR5\",\"content_logo\":\"ProfileInfo_content_logo__8p191\",\"description\":\"ProfileInfo_description__2zthQ\",\"main_content_img\":\"ProfileInfo_main_content_img__JFuWp\"};","import React, { useEffect, useState } from 'react'\r\n\r\nexport default function ProfileStatusFunc(props) {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(\"enter your status New\")\r\n\r\n    useEffect(()=> {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = ()=> {\r\n        setEditMode(true)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n  return (\r\n    <div>\r\n    {!editMode &&\r\n        <div>\r\n            <span onDoubleClick={activateEditMode} >{props.status || \"enter your status\"}</span>\r\n        </div>}\r\n   {editMode &&\r\n        <div>\r\n            <input onChange={onStatusChange}  autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n        </div>}\r\n    \r\n   \r\n\r\n</div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport style from './ProfileInfo.module.css'\r\nimport Preloader from '../../Preloader/Preloader';\r\n\r\nimport ProfileStatusFunc from './ProfileStatusFunc';\r\nlet url = 'https://buzookod.ru/media/2816616767_vubrbeJ.jpg'\r\n\r\nexport default function ProfileInfo(props) {\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    \r\n    <div>\r\n      <div>\r\n        <img className={style.main_content_img} src='https://static.tildacdn.com/tild3031-6564-4332-a464-643231303036/39.jpg' alt=''></img>\r\n      </div>\r\n      \r\n      \r\n   {/*<ProfileStatus status={props.status} updateStatus={props.updateStatus}/>*/} \r\n   <ProfileStatusFunc status={props.status} updateStatus={props.updateStatus} />\r\n    <div className={style.ava}>\r\n    <img className={style.content_logo} src={props.profile.photos.small !== null ? props.profile.photos.small : url} alt=''></img>\r\n\r\n    <div className={style.description}>\r\n        <h3>{props.profile.fullName}</h3>\r\n        <p>{props.profile.contacts.facebook}</p>\r\n        <p>{props.profile.contacts.website}</p>\r\n        <p>{props.profile.contacts.vk}</p>\r\n        <p>{props.profile.contacts.twitter}</p>\r\n        <p>{props.profile.contacts.youtube}</p>\r\n        <p>{props.profile.contacts.github}</p>\r\n        <p>{props.profile.contacts.mainLink}</p>\r\n        <p>City</p>\r\n        <p>{props.profile.aboutMe}</p>\r\n        <a src=\"#\">Web Site</a>\r\n    </div>\r\n</div>\r\n</div>\r\n  )\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"post_avatar\":\"Post_post_avatar__+BmV4\",\"post\":\"Post_post__uEs8H\"};","import React from 'react'\r\nimport style from './Post.module.css'\r\n\r\nexport default function Post(props) {\r\n  return (\r\n    <div className={style.post}>\r\n        <img className={style.post_avatar} src='https://w7.pngwing.com/pngs/73/738/png-transparent-flower-graphy-flower-purple-violet-lilac.png'></img>\r\n        <span>{props.message}</span>\r\n        <div>Like {props.likesCount}</div>\r\n        </div>\r\n        \r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"new_posts\":\"MyPosts_new_posts__op6dy\",\"title\":\"MyPosts_title__USYvv\",\"button_block\":\"MyPosts_button_block__Kc6fS\"};","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport style from \"./MyPosts.module.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  requiredField,\r\n} from \"../../../utils/validators/validator\";\r\nimport { Textarea } from \"../../FormControls/FormControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10); //устанавливаем значие длины сообщения\r\n\r\n//React.memo для контроля перерендинга в функциональной компоненте, перерендинг ТОЛЬКО при изменении пропс или стайт\r\n//в классовой компоненте для этих целей надо использовать extends React.PureComponent\r\nconst MyPosts = React.memo((props) => {\r\n //alert('render')\r\n //console.log(\"RENDER\")\r\n //функция reverse изменяет state, чтобы этого не было компонента должна для работы сосздать КОПИЮ стайта [...props.postsData], а не использовать сам стайт props.postsData\r\n  let postsElements = [...props.postsData].reverse().map((obj) => { \r\n    return <Post key={obj.id} message={obj.post} likesCount={obj.likesCount} />;\r\n  });\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText); //newPostText название name из Field\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className={style.title}>My posts</h2>\r\n\r\n      <AddPostFormRedux onSubmit={onAddPost} />\r\n\r\n      <div className={style.new_posts}>New posts</div>\r\n      {postsElements}\r\n    </div>\r\n  );\r\n})\r\n\r\n\r\n\r\nconst addPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={Textarea}\r\n        name=\"newPostText\"\r\n        validate={[requiredField, maxLength10]}\r\n        placeholder=\"Post text\"\r\n      />\r\n\r\n      <div className={style.button_block}>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst AddPostFormRedux = reduxForm({ form: \"myPostsAddForm\" })(addPostForm);\r\nexport default MyPosts;\r\n","import React from \"react\";\r\n\r\nimport MyPosts from \"../MyPosts\";\r\nimport { addPostActionCreator } from \"../../../../redux/profileReducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n     \r\n        addPost: (newPostText)=> { //newPostText название name из Field из MyPosts\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n\r\n    }\r\n}\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\n\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/Post/MyPostsContainer\";\r\n\r\n\r\n\r\nfunction Profile (props) {\r\n    return (\r\n        <div >\r\n        \r\n       <ProfileInfo profile={props.profile}\r\n       status={props.status} \r\n       updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer\r\n       // store = {props.store}\r\n    \r\n        \r\n         />\r\n       \r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfileThunk, getUserStatusThunk, setUserProfileCreator, updateUserStatusThunk } from \"../../redux/profileReducer\";\r\nimport { Navigate, useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { usersAPI } from \"../../api/api\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n//withRouter чтобы прокидывать url адрес пользователя в profile\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\n\r\nclass ProfileContainer extends React.Component  {\r\n    \r\n    componentDidMount() {\r\n     // debugger;\r\n        let profileId = this.props.router.params.userId; //userId это название роута из App.js\r\n        if (!profileId) {\r\n            profileId = this.props.authorezedUserId\r\n        }\r\n        this.props.getUserProfileThunk(profileId)\r\n        this.props.getUserStatusThunk(profileId)\r\n      /* перенос в profileReduser\r\n       profileAPI.getProfile(profileId)\r\n            (перенос в api и замена на profileAPI.getProfile)\r\n            axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${profileId}`) \r\n        .then(res => {\r\n            this.props.setUserProfile(res.data)\r\n           \r\n          });*/\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n                <div >\r\n                \r\n            <Profile \r\n                {...this.props} \r\n                profile={this.props.profile} \r\n                status = {this.props.status}\r\n                updateStatus= {this.props.updateStatus}\r\n            \r\n            \r\n            /> \r\n            {/* {...this.props}передача всех props*/}\r\n           \r\n            \r\n            \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n  \r\n\r\n    //hoc перенос в compose\r\n    //let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n    \r\n   /*запись аналогична let AuthRedirectComponent =  (props) => {\r\n        if (!props.isAuth) return <Navigate to=\"/login\"></Navigate>\r\n        return <ProfileContainer {...props}/>\r\n    }*/\r\n    \r\n  \r\n\r\n\r\n\r\n    let mapStateToProps = (state) => ({\r\n        profile: state.profilePage.profile,\r\n      //  isAuth: state.auth.isAuth\r\n      status: state.profilePage.status,\r\n      authorezedUserId: state.auth.id,\r\n      isAuth: state.auth.isAuth\r\n       \r\n    })\r\n\r\n// перенос в compose\r\n/*export default connect (mapStateToProps, {\r\n    setUserProfile: setUserProfileCreator ,\r\n    getUserProfileThunk: getUserProfileThunk\r\n}) (withRouter(AuthRedirectComponent))*/\r\n\r\nexport default  compose(connect (mapStateToProps, {\r\n   // setUserProfile: setUserProfileCreator ,\r\n    getUserProfileThunk: getUserProfileThunk,\r\n    getUserStatusThunk: getUserStatusThunk,\r\n    updateStatus: updateUserStatusThunk\r\n\r\n\r\n}),\r\n    withRouter,\r\n    withAuthRedirect\r\n )(ProfileContainer)"],"names":["ProfileStatusFunc","props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","activateEditMode","onChange","e","currentTarget","value","autoFocus","onBlur","deactivateEditMode","updateStatus","url","ProfileInfo","profile","className","style","main_content_img","src","alt","ava","content_logo","photos","small","description","fullName","contacts","facebook","website","vk","twitter","youtube","github","mainLink","aboutMe","Preloader","Post","message","likesCount","maxLength10","maxLengthCreator","MyPosts","React","postsElements","postsData","reverse","map","obj","post","id","AddPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","requiredField","placeholder","connect","state","profilePage","dispatch","addPostActionCreator","MyPostsContainer","ProfileContainer","componentDidMount","profileId","this","router","params","userId","authorezedUserId","getUserProfileThunk","getUserStatusThunk","render","Profile","compose","auth","isAuth","updateUserStatusThunk","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect"],"sourceRoot":""}